apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-deployment
  namespace: production
  labels:
    app: webapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - name: webapp
        image: horekk/webapp
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 200m
        envFrom:
        - secretRef:
            name: production-secret

---

apiVersion: v1
kind: Service
metadata:
  name: webapp
  namespace: production
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
  selector:
    app: webapp

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: webapp-ingress-static
  namespace: production
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - challenge.francecentral.cloudapp.azure.com
    secretName: tls-secret
  rules:
  - host: challenge.francecentral.cloudapp.azure.com
    http:
      paths:
      - pathType: Prefix
        backend:
          service:
            name: webapp
            port: 
              number: 80
        path: /


---

apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt
  namespace: production
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: azenoxe@gmail.com
    privateKeySecretRef:
      name: letsencrypt
    solvers:
    - http01:
        ingress:
          class: nginx
          podTemplate:
            spec:
              nodeSelector:
                "kubernetes.io/os": linux